This patch reverts the following patch:

From 92910b6b2dd0b75bcc99e30eb660742168cef6ce Mon Sep 17 00:00:00 2001
From: Pablo Barciela <scow@riseup.net>
Date: Mon, 7 Jan 2019 01:32:05 +0100
Subject: [PATCH] avoid deprecated 'gdk_error_trap_push/pop/pop_ignored' and
 'gdk_flush'

---
 maximus/main.c            |  5 +++--
 maximus/maximus-app.c     | 23 +++++++++++++----------
 maximus/tomboykeybinder.c |  9 +++++----
 maximus/xutils.c          |  7 ++++---
 4 files changed, 25 insertions(+), 19 deletions(-)

diff --git a/maximus/main.c b/maximus/main.c
index b271cd2..267cc0a 100644
--- b/maximus/main.c
+++ a/maximus/main.c
@@ -64,7 +64,6 @@
   MaximusApp UNUSED_VARIABLE *app;
   GOptionContext  *context;
   GError *error = NULL;
-  GdkDisplay *gdk_display = gdk_display_get_default ();
 
   g_set_application_name ("Maximus");
   
@@ -90,9 +89,9 @@
   g_option_context_parse (context, &argc, &argv, NULL);
   g_option_context_free(context);  
 
+  gdk_error_trap_push ();
-  gdk_x11_display_error_trap_push (gdk_display);
   app = maximus_app_get_default ();
+  gdk_error_trap_pop_ignored ();
-  gdk_x11_display_error_trap_pop_ignored (gdk_display);
 
   gtk_main ();
 
--- b/maximus/maximus-app.c
+++ a/maximus/maximus-app.c
@@ -149,13 +149,13 @@
   hints_atom = gdk_x11_get_xatom_by_name_for_display (display, 
                                                       _XA_MOTIF_WM_HINTS);
 
+  gdk_error_trap_push ();
-  gdk_x11_display_error_trap_push (display);
   XGetWindowProperty (GDK_DISPLAY_XDISPLAY (display), 
                       wnck_window_get_xid (window),
 		                  hints_atom, 0, sizeof (MotifWmHints)/sizeof (long),
 		                  False, AnyPropertyType, &type, &format, &nitems,
 		                  &bytes_after, &data);
+  if (gdk_error_trap_pop ())
-  if (gdk_x11_display_error_trap_pop (display))
     return;
   
   if (type != hints_atom || !data)
@@ -181,7 +181,7 @@
                    wnck_window_get_xid (window),
                    hints_atom, hints_atom, 32, PropModeReplace,
                    (guchar *)hints, sizeof (MotifWmHints)/sizeof (long));
+  gdk_flush ();
-  gdk_display_flush (display);
   _wnck_error_trap_pop ();
   
   if (data)
@@ -359,7 +359,6 @@
   MaximusAppPrivate *priv;
   WnckWindowType type;
   gint exclude = 0;
-  GdkDisplay *gdk_display = gdk_display_get_default ();
   
   g_return_if_fail (MAXIMUS_IS_APP (app));
   g_return_if_fail (WNCK_IS_WINDOW (window));
@@ -370,9 +369,9 @@
     return;
 
   /* Ignore undecorated windows */
+  gdk_error_trap_push ();
-  gdk_x11_display_error_trap_push (gdk_display);
   exclude = wnck_window_is_decorated (window) ? 0 : 1;
+  if (gdk_error_trap_pop ())
-  if (gdk_x11_display_error_trap_pop (gdk_display))
     return;
 
   if (wnck_window_is_maximized (window))
@@ -391,7 +390,7 @@
     if (wnck_window_is_maximized(window) && priv->undecorate)
     {
       _window_set_decorations (window, 0);
+      gdk_flush ();
-      gdk_display_flush (gdk_display);
     }
     g_signal_connect (window, "state-changed",
                       G_CALLBACK (on_window_state_changed), app);
@@ -404,7 +403,7 @@
     if (!window_is_too_large_for_screen (window))
     {
       _window_set_decorations (window, 0);
+      gdk_flush ();
-      gdk_display_flush (gdk_display);
     }
   }
 
@@ -484,14 +483,12 @@
 
     if (!is_excluded (app, window))
     {
+      gdk_error_trap_push ();
-      GdkDisplay *gdk_display = gdk_display_get_default ();
-
-      gdk_x11_display_error_trap_push (gdk_display);
       _window_set_decorations (window, priv->undecorate ? 0 : 1);
       wnck_window_unmaximize (window);
       wnck_window_maximize (window);
+      gdk_flush ();
+      gdk_error_trap_pop_ignored ();
-      gdk_display_flush (gdk_display);
-      gdk_x11_display_error_trap_pop_ignored (gdk_display);
 
       sleep (1);
     }
--- b/maximus/tomboykeybinder.c
+++ a/maximus/tomboykeybinder.c
@@ -102,8 +102,7 @@
 static gboolean 
 do_grab_key (Binding *binding)
 {
+	GdkKeymap *keymap = gdk_keymap_get_for_display (gdk_display_get_default ());
-	GdkDisplay *gdk_display = gdk_display_get_default ();
-	GdkKeymap *keymap = gdk_keymap_get_for_display (gdk_display);
 	GdkWindow *rootwin = gdk_get_default_root_window ();
 
 	EggVirtualModifierType virtual_mods = 0;
@@ -132,15 +131,15 @@
 
 	TRACE (g_print ("Got modmask %d\n", binding->modifiers));
 
+	gdk_error_trap_push ();
-	gdk_x11_display_error_trap_push (gdk_display);
 
 	grab_ungrab_with_ignorable_modifiers (rootwin, 
 					      binding, 
 					      TRUE /* grab */);
 
+	gdk_flush ();
-	gdk_display_flush (gdk_display);
 
+	if (gdk_error_trap_pop ()) {
-	if (gdk_x11_display_error_trap_pop (gdk_display)) {
 	   g_warning ("Binding '%s' failed!\n", binding->keystring);
 	   return FALSE;
 	}
--- b/maximus/xutils.c
+++ a/maximus/xutils.c
@@ -37,15 +37,14 @@
 void
 _wnck_error_trap_push (void)
 {
+  gdk_error_trap_push ();
-  gdk_x11_display_error_trap_push (gdk_display_get_default ());
 }
 
 int
 _wnck_error_trap_pop (void)
 {
+  XSync (GDK_DISPLAY_XDISPLAY (gdk_display_get_default ()), False);
+  return gdk_error_trap_pop ();
-  GdkDisplay *gdk_display = gdk_display_get_default ();
-  XSync (GDK_DISPLAY_XDISPLAY (gdk_display), False);
-  return gdk_x11_display_error_trap_pop (gdk_display);
 }
 
 static char*
